name: Build and Save APK

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      API_KEY_TODO: ${{ secrets.API_KEY_TODO }}
      API_KEY_FIREBASE_ANDROID: ${{ secrets.API_KEY_FIREBASE_ANDROID }}
      API_KEY_FIREBASE_IOS: ${{ secrets.API_KEY_FIREBASE_IOS }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.24.1

      - name: Install dependencies
        run: flutter pub get

      #    - name: Statically analyze the Dart code for any errors.
      #      run: flutter analyze .

      #name: Run widget tests for our flutter project.
      #- run: flutter test

      - name: Accept Android Licenses
        run: yes | flutter doctor --android-licenses

      - name: Set up Keystore
        # Decode and save the keystore file
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > $GITHUB_WORKSPACE/android/app/keystore.jks

      - name: Configure Signing Key
        # Create the key.properties file with signing information
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_WORKSPACE/android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_WORKSPACE/android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> $GITHUB_WORKSPACE/android/key.properties
          echo "storeFile=keystore.jks" >> $GITHUB_WORKSPACE/android/key.properties

      - name: Build Android Release
        run: flutter build apk --release --dart-define=API_KEY_TODO=${{ secrets.API_KEY_TODO }} --dart-define=API_KEY_FIREBASE_ANDROID=${{ secrets.API_KEY_FIREBASE_ANDROID }} --dart-define=API_KEY_FIREBASE_IOS=${{ secrets.API_KEY_FIREBASE_IOS }}

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Release APK
        uses: actions/download-artifact@v3
        with:
          name: app-release.apk
          path: .

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: app-release.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          body: |
            ## Release Notes
            - Automatic build and upload of the APK.
            - Additional notes can be added here.
          draft: false
          prerelease: false
